import 'dart:io';
import 'package:blue_pdf/screens/camera2.dart';
import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:file_picker/file_picker.dart';
import 'package:blue_pdf/state_providers.dart';
import 'package:path/path.dart' as path;
import 'package:path_provider/path_provider.dart';


class CameraButton extends ConsumerWidget {
  const CameraButton({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    return Align(
      alignment: Alignment.bottomCenter,
      child: Padding(
        padding: const EdgeInsets.only(top: 20.0),
        child: GestureDetector(
          onTap: () async {
            final selectedTool = ref.read(selectedToolProvider);
            if (selectedTool != "Image to PDF") {
              ref.read(selectedToolProvider.notifier).state = "Image to PDF";
            }

            await Navigator.push(
              context,
              MaterialPageRoute(
                builder: (_) => CameraCaptureScreen(
                  onImageCaptured: (File file) async {
                    final timestamp = DateTime.now().millisecondsSinceEpoch;
                    final fileName = 'BluePDF_$timestamp.jpg';

                    // ✅ Step 1: Save to app's cache directory (private, no permission required)
                    final cacheDir = await getTemporaryDirectory();
                    final appFile = await file.copy(path.join(cacheDir.path, fileName));

                    // ✅ Step 2: Save to public Pictures directory (for system access)
                    final picturesDir = Directory('/storage/emulated/0/Pictures/BluePDF');
                    if (!await picturesDir.exists()) {
                      await picturesDir.create(recursive: true);
                    }
                    final savedFile = await file.copy(path.join(picturesDir.path, fileName));

                    // ✅ Step 3: Use app cache file for app UI (no permission prompt)
                    final platformFile = PlatformFile(
                      name: fileName,
                      path: appFile.path, // <-- using private path
                      size: await appFile.length(),
                    );

                    ref.read(imageToPdfFilesProvider.notifier).addFiles([platformFile]);

                    // Optional: You could toast/show a snackbar for "Saved to Gallery"
                  },

                ),
              ),
            );
          },
          child: Container(
            width: 80,
            height: 80,
            decoration: BoxDecoration(
              shape: BoxShape.circle,
              gradient: const LinearGradient(
                colors: [Color(0xFF0D47A1), Color(0xFF1976D2)],
                begin: Alignment.topLeft,
                end: Alignment.bottomRight,
              ),
              boxShadow: [
                BoxShadow(
                  color: Colors.blueAccent.withOpacity(0.3),
                  blurRadius: 10,
                  spreadRadius: 2,
                  offset: const Offset(0, 6),
                ),
              ],
            ),
            child: const Center(
              child: Icon(Icons.camera_alt, size: 36, color: Colors.white),
            ),
          ),
        ),
      ),
    );
  }
}
